Nested crossvalidation started.
Number of trin_valid-test splits: 2
Number of train-valid splits:2
Fold 1
Train dataset: 5185
Test dataset: 577
Training started.
	Model: RapidENet
	Optimizer: adam
	Hyperparameter:
		lr = 0.1
		weight_decay = 1.0
		momentum = 0.9
		max_iter = 30
		drop_out = 0.1
		l1 = 0.0
		l2 = 0.0
		num_of_epochs = 200
		optimizer = adam

Epoch 1 started.
Traceback (most recent call last):
  File "experiment.py", line 366, in <module>
    exp1.nested_crossvalidation() 
  File "experiment.py", line 197, in nested_crossvalidation
    inner[k][j] = self.train(train_loader, hp, save_model = False, valid_loader=valid_loader)
  File "experiment.py", line 268, in train
    for j, valid_batch in enumerate(valid_loader):
  File "/opt/anaconda3/lib/python3.6/site-packages/torch/utils/data/dataloader.py", line 263, in __next__
    indices = next(self.sample_iter)  # may raise StopIteration
  File "/opt/anaconda3/lib/python3.6/site-packages/torch/utils/data/sampler.py", line 138, in __iter__
    for idx in self.sampler:
  File "/home/guest/coderepos/transfer_learning/Rapid-E/src/sampler.py", line 57, in __iter__
    return iter(self.gen_sample_array())
  File "/home/guest/coderepos/transfer_learning/Rapid-E/src/sampler.py", line 53, in gen_sample_array
    train_index, test_index = next(s.split(X, y))
  File "/opt/anaconda3/lib/python3.6/site-packages/sklearn/model_selection/_split.py", line 1204, in split
    for train, test in self._iter_indices(X, y, groups):
  File "/opt/anaconda3/lib/python3.6/site-packages/sklearn/model_selection/_split.py", line 1546, in _iter_indices
    raise ValueError("The least populated class in y has only 1"
ValueError: The least populated class in y has only 1 member, which is too few. The minimum number of groups for any class cannot be less than 2.
